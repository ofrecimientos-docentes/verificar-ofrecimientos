name: Procesar observaciones con Gemini (dev)

on:
  push:
    branches: [dev]
    paths:
      - "observaciones.csv" # corre cuando se actualiza el CSV base
      - "ai/observaciones.py" # o cuando cambia el script
  workflow_dispatch: {} # permite ejecución manual

permissions:
  contents: write # para commitear observaciones_final.csv

jobs:
  procesar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo público (dev)
        uses: actions/checkout@v4
        with:
          ref: dev
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            ai/observaciones.py

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install polars pydantic "google-genai>=0.3.0"

      - name: Procesar observaciones con Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python ai/observaciones.py

      - name: Mostrar resumen
        run: |
          python - <<'PY'
          import polars as pl, os
          f = "observaciones_final.csv"
          if os.path.exists(f):
              df = pl.read_csv(f)
              print(f"✅ observaciones_final.csv: {df.height} filas")
              print("▶ Primeras 5 filas:")
              print(df.head(5))
          else:
              print("❌ No se generó observaciones_final.csv")
          PY

      - name: Commit & push resultado (dev)
        run: |
          if [ -f "observaciones_final.csv" ]; then
            git config user.name "github-actions"
            git config user.email "actions@github.com"
            git add observaciones_final.csv
            git commit -m "AI: actualizar observaciones_final.csv (dev)" || echo "No changes"
            git push origin dev
          fi
