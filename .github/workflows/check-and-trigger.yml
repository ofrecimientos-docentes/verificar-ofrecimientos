name: Check ofrecimientos & trigger private

on:
  schedule:
    - cron: "*/5 * * * *" # cada 5 minutos (UTC)
  workflow_dispatch:

permissions:
  contents: write # para commitear el estado (hash)

concurrency:
  group: check-ofrecimientos
  cancel-in-progress: true

jobs:
  check-and-trigger:
    runs-on: ubuntu-latest

    env:
      STATE_FILE: .state_ofrec_hash
      PARQUET_PATH: ofrecimientos.parquet
      EVENT_TYPE: ofrecimientos-changed
      TARGET_OWNER: ofrecimientos-docentes
      TARGET_REPO: etl-ofrecimientos-docentes

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: |
          python - << 'PY'
          import sys
          from main import main
          if __name__ == "__main__":
              main()
          PY

      - name: Compute current hash
        id: hash
        run: |
          if [ ! -f "${PARQUET_PATH}" ]; then
            echo "Parquet no encontrado: ${PARQUET_PATH}"
            exit 1
          fi
          CURR_HASH=$(sha256sum "${PARQUET_PATH}" | awk '{print $1}')
          echo "curr_hash=${CURR_HASH}" >> $GITHUB_OUTPUT

      - name: Load previous hash (if any)
        id: prev
        run: |
          if [ -f "${STATE_FILE}" ]; then
            PREV_HASH=$(cat "${STATE_FILE}")
          else
            PREV_HASH=""
          fi
          echo "prev_hash=${PREV_HASH}" >> $GITHUB_OUTPUT

      - name: Detect changes & persist state
        id: detect
        run: |
          if [ "${{ steps.hash.outputs.curr_hash }}" = "${{ steps.prev.outputs.prev_hash }}" ] && [ -n "${{ steps.prev.outputs.prev_hash }}" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Sin cambios en el Parquet."
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "${{ steps.hash.outputs.curr_hash }}" > "${STATE_FILE}"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add "${STATE_FILE}" || true
            git commit -m "update ofrecimientos hash" || echo "Nada para commitear"
            git push || echo "No se pudo pushear (ok si no hay cambios reales)"
          fi

      - name: Trigger private repo via repository_dispatch
        if: steps.detect.outputs.changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          echo "Disparando evento $EVENT_TYPE a ${TARGET_OWNER}/${TARGET_REPO}"
          curl -sS -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GH_TOKEN}" \
            https://api.github.com/repos/${TARGET_OWNER}/${TARGET_REPO}/dispatches \
            -d "{\"event_type\":\"${EVENT_TYPE}\",\"client_payload\":{\"parquet_hash\":\"${{ steps.hash.outputs.curr_hash }}\"}}"
